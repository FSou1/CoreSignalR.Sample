@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<style>
    .up {
        background-color: greenyellow;
    }

    .down {
        background-color: lightcoral;
    }
</style>
<h2>Currencies</h2>

<div id="app">
    <div class="row">
        <div class="col-md-4">
            <p v-if="!currencies">Loading...</p>

            <table class="table table-bordered table-striped" v-if="currencies">
                <tr>
                    <th></th>
                    <th v-for="(value, key) in currencies">{{ key.toUpperCase() }}</th>
                </tr>

                <tr>
                    <th>
                        <img src="http://www.xe.com/themes/xe/images/flags/rub.png" /> RUB
                    </th>
                    <td v-for="(value, key) in currencies"
                        v-bind:class="{ 'up': changes[key], 'down': !changes[key] }">
                        {{ value }}
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/signalr-client-1.0.0-alpha2-final.min.js"></script>
    <script src="https://unpkg.com/vue@latest"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                currencies: null,
                changes: {}
            },
            methods: {
                hubConnect: function() {
                    var connection = new signalR.HubConnection('/currency');

                    connection.on('currenciesUpdated',
                        function(data) {
                            this.currencies = data;
                        }.bind(this));

                    connection.onclose(e => {
                        if (e) {
                            console.log('Connection closed with error: ' + e, 'red');
                        } else {
                            console.log('Disconnected', 'green');
                        }
                    });

                    connection.start();
                }
            },
            watch: {
                currencies: function (newVal, oldVal) {
                    if (!newVal || !oldVal) return;
                    for (var key in newVal) {
                        if (newVal.hasOwnProperty(key)) {
                            this.changes[key] = newVal[key] > oldVal[key];
                        }
                    }
                }
            },
            mounted: function() {
                this.hubConnect();
            }
        });
    </script>
}